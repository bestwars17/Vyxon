-- DEVIL_YSF | Phase 1: Fast Gain + Fast Rebirths
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()

-- Settings
local autoTrain = true -- Fast Gain
local training = false
local threads = {}

local autoRebirth = true -- Fast Rebirths
local rebirthEvent = ReplicatedStorage:WaitForChild("rEvents"):WaitForChild("rebirthRemote")

-- Fast Gain Function
local function startTraining()
	if training then return end
	training = true

	for _ = 1, 50 do
		local thread = task.spawn(function()
			while autoTrain and training do
				if player:FindFirstChild("muscleEvent") then
					player.muscleEvent:FireServer("rep")
				end
				task.wait(0) -- Max speed
			end
		end)
		table.insert(threads, thread)
	end
end

local function stopTraining()
	training = false
	threads = {}
end

-- Fast Rebirths Function
task.spawn(function()
	while autoRebirth do
		if rebirthEvent then
			pcall(function()
				rebirthEvent:InvokeServer("rebirthRequest")
			end)
		end
		task.wait(0.1) -- سريع جدًا
	end
end)

-- Auto Start Training if sitting
RunService.RenderStepped:Connect(function()
	if not autoTrain then
		stopTraining()
		return
	end

	local humanoid = char:FindFirstChildOfClass("Humanoid")
	if humanoid and humanoid.Sit then
		startTraining()
	else
		stopTraining()
	end
end)
-- DEVIL_YSF | Phase 2: Auto Farm Integration
local Workspace = game:GetService("Workspace")
local autoFarmMachine = false
local selectedMachine = nil

local autoFarmMob = false
local selectedMob = nil
local mobs = {}

-- Dropdown / اختيار ماكينة التدريب
farmTab:AddDropdown("Select Machine", function(option)
	selectedMachine = option
end, { default = "Muscle King Bench", options = {"Muscle King Bench", "Muscle King Lift", "Muscle King Teleportal"} })

-- Auto Farm Machine
farmTab:AddSwitch("Auto Farm Machine", function(state)
	autoFarmMachine = state
	if state then
		task.spawn(function()
			while autoFarmMachine and selectedMachine and char:FindFirstChild("HumanoidRootPart") do
				local machine = Workspace:FindFirstChild(selectedMachine)
				if machine then
					char.HumanoidRootPart.CFrame = machine.CFrame * CFrame.new(0,0,3)
					local tool = char:FindFirstChildOfClass("Tool")
					if tool then tool:Activate() end
				end
				task.wait(0.05) -- سرعة التمرين
			end
		end)
	end
end)

-- Mob Farm
farmTab:AddTextBox("Mob Name", function(name)
	if name and name ~= "" and not table.find(mobs, name) then
		table.insert(mobs, name)
		mobDropdown:UpdateOptions(mobs)
	end
end, { placeholder = "Type Mob Name" })

mobDropdown = farmTab:AddDropdown("Select Mob", function(mob)
	selectedMob = mob
end, { default = nil, options = mobs })

farmTab:AddSwitch("Auto Farm Mob", function(state)
	autoFarmMob = state
	if state then
		task.spawn(function()
			while autoFarmMob and selectedMob and char:FindFirstChild("HumanoidRootPart") do
				for _, mob in pairs(Workspace:GetDescendants()) do
					if mob:IsA("Model") and mob.Name == selectedMob and mob:FindFirstChild("HumanoidRootPart") then
						char.HumanoidRootPart.CFrame = mob.HumanoidRootPart.CFrame * CFrame.new(0,0,-3)
						local tool = char:FindFirstChildOfClass("Tool")
						if tool then tool:Activate() end
						task.wait(0.05) -- سرعة الهجوم على الموب
					end
				end
				task.wait(0.05) -- دورة التكرار
			end
		end)
	end
end)
-- DEVIL_YSF | Phase 3: Killer Tab Optimized
local killerTab = win:AddTab("Killer")
local whitelist = {} -- قائمة اللاعبين المحميين
local ringAuraRadius = 10 -- نصف قطر Fast Kill Aura

-- Kill Evil Karma
killerTab:AddSwitch("Kill Evil Karma", function(state)
	task.spawn(function()
		while state do
			for _, p in pairs(Players:GetPlayers()) do
				if p ~= player and not table.find(whitelist, p.Name) then
					local karma = p:FindFirstChild("leaderstats") and p.leaderstats:FindFirstChild("Karma")
					if karma and karma.Value < 0 then
						local hrp = p.Character and p.Character:FindFirstChild("HumanoidRootPart")
						if hrp and char:FindFirstChild("HumanoidRootPart") then
							char.HumanoidRootPart.CFrame = hrp.CFrame * CFrame.new(0,0,3)
							local tool = char:FindFirstChildOfClass("Tool")
							if tool then tool:Activate() end
						end
					end
				end
			end
			task.wait(0.2)
		end
	end)
end)

-- Kill Good Karma
killerTab:AddSwitch("Kill Good Karma", function(state)
	task.spawn(function()
		while state do
			for _, p in pairs(Players:GetPlayers()) do
				if p ~= player and not table.find(whitelist, p.Name) then
					local karma = p:FindFirstChild("leaderstats") and p.leaderstats:FindFirstChild("Karma")
					if karma and karma.Value > 0 then
						local hrp = p.Character and p.Character:FindFirstChild("HumanoidRootPart")
						if hrp and char:FindFirstChild("HumanoidRootPart") then
							char.HumanoidRootPart.CFrame = hrp.CFrame * CFrame.new(0,0,3)
							local tool = char:FindFirstChildOfClass("Tool")
							if tool then tool:Activate() end
						end
					end
				end
			end
			task.wait(0.2)
		end
	end)
end)

-- Kill Low Strength
local lowStrength = 0
killerTab:AddTextBox("Kill Low Strength <", function(val)
	lowStrength = tonumber(val) or 0
end, { placeholder = "Strength Threshold" })

-- Whitelist Player
killerTab:AddTextBox("Whitelist User", function(name)
	if name and name ~= "" and not table.find(whitelist, name) then
		table.insert(whitelist, name)
	end
end, { placeholder = "Add Username" })

-- Auto Kill All
killerTab:AddSwitch("Auto Kill All", function(state)
	task.spawn(function()
		while state do
			for _, p in pairs(Players:GetPlayers()) do
				if p ~= player and not table.find(whitelist, p.Name) then
					local hrp = p.Character and p.Character:FindFirstChild("HumanoidRootPart")
					if hrp and char:FindFirstChild("HumanoidRootPart") then
						char.HumanoidRootPart.CFrame = hrp.CFrame * CFrame.new(0,0,3)
						local tool = char:FindFirstChildOfClass("Tool")
						if tool then tool:Activate() end
					end
				end
			end
			task.wait(0.2)
		end
	end)
end)

-- Fast Kill Aura
killerTab:AddSwitch("Fast Kill Aura", function(state)
	task.spawn(function()
		while state do
			for _, p in pairs(Players:GetPlayers()) do
				if p ~= player and not table.find(whitelist, p.Name) then
					local hrp = p.Character and p.Character:FindFirstChild("HumanoidRootPart")
					local myHrp = char:FindFirstChild("HumanoidRootPart")
					if hrp and myHrp then
						local distance = (myHrp.Position - hrp.Position).Magnitude
						if distance <= ringAuraRadius then
							local tool = char:FindFirstChildOfClass("Tool")
							if tool then tool:Activate() end
						end
					end
				end
			end
			task.wait(0.05)
		end
	end)
end)

-- Spy Player
local targetPlayerName = nil
killerTab:AddTextBox("Target Player Username", function(name)
	targetPlayerName = name
end, { placeholder = "Username" })

killerTab:AddSwitch("Spy Player", function(state)
	task.spawn(function()
		while state do
			if targetPlayerName then
				local target = Players:FindFirstChild(targetPlayerName)
				if target and target.Character and target.Character:FindFirstChildOfClass("Humanoid") then
					workspace.CurrentCamera.CameraSubject = target.Character:FindFirstChildOfClass("Humanoid")
				end
			end
			task.wait(1)
		end
		if char:FindFirstChildOfClass("Humanoid") then
			workspace.CurrentCamera.CameraSubject = char:FindFirstChildOfClass("Humanoid")
		end
	end)
end)
-- DEVIL_YSF | Phase 4: Crystals Tab Optimized
local crystalsTab = win:AddTab("Crystals")

-- Pets Lists
local uniquePets = {
	"Infernal Dragon", "Ultra Birdie", "Magic Butterfly", "Aether Spirit Bunny",
	"Cybernetic Showdown Dragon", "Darkstar Hunter", "Hank", "Gold Warrior",
	"Sky Hawk", "Cool Guy", "Larry", "Screaming Bones", "Muscle Sensei", "Neon Guardian"
}
local epicPets = {"Blue Pheonix", "Blue Firecaster", "Golden Pheonix", "Red Firecaster", "Green Firecaster"}
local rarePets = {"Crimson Falcon", "Purple Dragon", "Orange Pegasus", "Red Dragon", "White Pegasus"}
local advancedPets = {"Dark Vampy", "Dark Golem", "Green Butterfly", "Yellow Butterfly", "Alien Girl", "Smiley Chops"}
local basicPets = {"Blue Birdie", "Orange Hedgehog", "Red Kitty", "Blue Bunny", "Silver Dog"}

-- Auras Lists
local uniqueAuras = {"Inferno", "Dark Storm", "Dark Lightning", "Muscle King", "Eternal Megastrike", "Entropic Blast"}
local epicAuras = {"Enchanted Mirage", "Unstable Mirage", "Lightning", "Azure Tundra", "Grand Supernova"}
local rareAuras = {"Astral Electro", "Dark Electro", "Ultra Mirage", "Supernova", "Power Lightning", "Ultra Inferno"}
local advancedAuras = {"Purple Nova", "Electro"}
local basicAuras = {"Yellow Aura", "Purple Aura", "Green Aura", "Blue Aura", "Red Aura"}

-- Pets Dropdowns
crystalsTab:AddDropdown("Select Pet (Unique)", function(pet) 
	print("Selected Unique Pet:", pet) 
end, { options = uniquePets })

crystalsTab:AddDropdown("Select Pet (Epic)", function(pet) 
	print("Selected Epic Pet:", pet) 
end, { options = epicPets })

crystalsTab:AddDropdown("Select Pet (Rare)", function(pet) 
	print("Selected Rare Pet:", pet) 
end, { options = rarePets })

crystalsTab:AddDropdown("Select Pet (Advanced)", function(pet) 
	print("Selected Advanced Pet:", pet) 
end, { options = advancedPets })

crystalsTab:AddDropdown("Select Pet (Basic)", function(pet) 
	print("Selected Basic Pet:", pet) 
end, { options = basicPets })

-- Auras Dropdowns
crystalsTab:AddDropdown("Select Aura (Unique)", function(aura) 
	print("Selected Unique Aura:", aura) 
end, { options = uniqueAuras })

crystalsTab:AddDropdown("Select Aura (Epic)", function(aura) 
	print("Selected Epic Aura:", aura) 
end, { options = epicAuras })

crystalsTab:AddDropdown("Select Aura (Rare)", function(aura) 
	print("Selected Rare Aura:", aura) 
end, { options = rareAuras })

crystalsTab:AddDropdown("Select Aura (Advanced)", function(aura) 
	print("Selected Advanced Aura:", aura) 
end, { options = advancedAuras })

crystalsTab:AddDropdown("Select Aura (Basic)", function(aura) 
	print("Selected Basic Aura:", aura) 
end, { options = basicAuras })
-- DEVIL_YSF | Phase 5: Auto Farm + Fast Gain + Fast Rebirths
local farmTab = win:AddTab("Auto Farm")

local machines = {
	"Tiny Island Rock", "Punching Rock", "Large Island Rock", "Golden Rock",
	"Frost Gym Rock", "Mythical Gym Rock", "Eternal Gym Rock", "Legend Gym Rock",
	"Muscle King Gym Rock", "Ancient Jungle Rock"
}

local mobs = {}
local selectedMachine = machines[1]
local selectedMob = nil
local autoFarmMachine = false
local autoFarmMob = false
local fastGain = false
local fastRebirth = false

-- Dropdown لاختيار الماكينة
farmTab:AddDropdown("Select Machine", function(option)
	selectedMachine = option
end, { default = selectedMachine, options = machines })

-- Switch Auto Farm Machine
farmTab:AddSwitch("Auto Farm Machine", function(state)
	autoFarmMachine = state
	if state then
		task.spawn(function()
			while autoFarmMachine and selectedMachine do
				local machine = workspace:FindFirstChild(selectedMachine)
				if machine and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
					plr.Character.HumanoidRootPart.CFrame = machine.CFrame * CFrame.new(0,0,3)
					local tool = plr.Character:FindFirstChildOfClass("Tool")
					if tool then tool:Activate() end
				end
				task.wait(0.05) -- سرعة التمرين الفائق
			end
		end)
	end
end)

-- إضافة اسم الموب
farmTab:AddTextBox("Mob Name", function(name)
	if name and name ~= "" and not table.find(mobs, name) then
		table.insert(mobs, name)
		mobDropdown:UpdateOptions(mobs)
	end
end, { placeholder = "Type Mob Name to Save" })

-- Dropdown لاختيار الموب
local mobDropdown = farmTab:AddDropdown("Select Mob", function(mob)
	selectedMob = mob
end, { default = nil, options = mobs })

-- Switch Auto Farm Mob
farmTab:AddSwitch("Auto Farm Mob", function(state)
	autoFarmMob = state
	if state then
		task.spawn(function()
			while autoFarmMob and selectedMob do
				for _, mob in pairs(workspace:GetDescendants()) do
					if mob:IsA("Model") and mob.Name == selectedMob and mob:FindFirstChild("HumanoidRootPart") then
						local hrp = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
						if hrp then
							hrp.CFrame = mob.HumanoidRootPart.CFrame * CFrame.new(0,0,-3)
							local tool = plr.Character:FindFirstChildOfClass("Tool")
							if tool then tool:Activate() end
						end
						task.wait(0.05)
					end
				end
				task.wait(0.05)
			end
		end)
	end
end)

-- Switch Fast Gain
farmTab:AddSwitch("Fast Gain", function(state)
	fastGain = state
	if state then
		task.spawn(function()
			while fastGain do
				if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
					for _, machine in pairs(machines) do
						local obj = workspace:FindFirstChild(machine)
						if obj then
							plr.Character.HumanoidRootPart.CFrame = obj.CFrame * CFrame.new(0,0,3)
							local tool = plr.Character:FindFirstChildOfClass("Tool")
							if tool then tool:Activate() end
						end
						task.wait(0.05)
					end
				end
			end
		end)
	end
end)

-- Switch Fast Rebirth
farmTab:AddSwitch("Fast Rebirth", function(state)
	fastRebirth = state
	if state then
		task.spawn(function()
			while fastRebirth do
				if plr:FindFirstChild("leaderstats") then
					pcall(function()
						game.ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
					end)
				end
				task.wait(0.1)
			end
		end)
	end
end)
